
This project is still Working In Progress.

VulcanoEGL aims to be an implementation of the Khronos Group EGL specification
which perform with Vulkan application.
It means that VulcanoEGL would prepare rendering by Vulkan.

The EGL implementation in this project is actually based on mesa egl (https://gitlab.freedesktop.org/mesa/mesa/-/tree/master/src/egl).
Now, I am trying to integrate the implementation to Vulkan.

  I.   Build
  II.  Testing
  III. Implementation status

I. Build
=============================
*Prerequisites:

 Vulkan driver and loader, SDK (Layers, Shader compiler etc...), 
 headers should be installed.
 Othe than that, since it's ANSI C99 should compile with any modern
 C compiler. jpeglib needs to be installed for example programs
 that use images.

* Compiling under UNIX systems:

    $ cd VulcanoEGL
    $ sh autogen.sh
    $ ./configure LIBS="-lvulkan"
    $ make
 
* Compiling on Mac:

    No XCode project files provided yet. The easiest way is by just
    using gcc, in which case look under UNIX compiling section.

* Compiling on Windows:

    Not supported yet.         

* Compiling in mingw / cygwin environment:
 
    Might work just as fine as any UNIX-flavored system, but hasn't
    been tested yet.

II. Testing
=============================

   $ cd examples
   $ sh test_*

  There is no real testing suite yet. The example programs are there
  just to play with what the implementation can currently do, but
  can hardly provide any proper validation, since no reference images
  are provided. Here is a description of each example program and
  what features it highlights:

  * test_egl

    Initialize EGL and create context, surface, and drawing the frame buffer using Vulkan.

III. Implementation status
=============================

* EGL:

  See src/EGL, examples/test_egl.c 
  and running test_egl.
  
